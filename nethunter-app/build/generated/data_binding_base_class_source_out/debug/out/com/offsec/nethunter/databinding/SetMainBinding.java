// Generated by data binding compiler. Do not edit!
package com.offsec.nethunter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.offsec.nethunter.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SetMainBinding extends ViewDataBinding {
  @NonNull
  public final View divider;

  @NonNull
  public final View divider4;

  @NonNull
  public final WebView mybrowser;

  @NonNull
  public final Button refreshPreview;

  @NonNull
  public final Button resetTemplate;

  @NonNull
  public final Button saveTemplate;

  @NonNull
  public final EditText setLink;

  @NonNull
  public final EditText setName;

  @NonNull
  public final EditText setPic;

  @NonNull
  public final EditText setSubject;

  @NonNull
  public final Spinner setTemplate;

  @NonNull
  public final Button startSet;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  protected SetMainBinding(Object _bindingComponent, View _root, int _localFieldCount, View divider,
      View divider4, WebView mybrowser, Button refreshPreview, Button resetTemplate,
      Button saveTemplate, EditText setLink, EditText setName, EditText setPic, EditText setSubject,
      Spinner setTemplate, Button startSet, TextView textView12, TextView textView18,
      TextView textView6, TextView textView7) {
    super(_bindingComponent, _root, _localFieldCount);
    this.divider = divider;
    this.divider4 = divider4;
    this.mybrowser = mybrowser;
    this.refreshPreview = refreshPreview;
    this.resetTemplate = resetTemplate;
    this.saveTemplate = saveTemplate;
    this.setLink = setLink;
    this.setName = setName;
    this.setPic = setPic;
    this.setSubject = setSubject;
    this.setTemplate = setTemplate;
    this.startSet = startSet;
    this.textView12 = textView12;
    this.textView18 = textView18;
    this.textView6 = textView6;
    this.textView7 = textView7;
  }

  @NonNull
  public static SetMainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.set_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SetMainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SetMainBinding>inflateInternal(inflater, R.layout.set_main, root, attachToRoot, component);
  }

  @NonNull
  public static SetMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.set_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SetMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SetMainBinding>inflateInternal(inflater, R.layout.set_main, null, false, component);
  }

  public static SetMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SetMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (SetMainBinding)bind(component, view, R.layout.set_main);
  }
}
